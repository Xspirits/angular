<div id="sharePost"></div>
</div> <!-- End .canvas -->


<script src="/js/init.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
	$(function() {
		var url = window.location.href;
		var arr = url.split("/");
		var resultURL = arr[0] + "//" + arr[2];
		//Socket 
		//http://localhost:8080/leaderboard
		socket = io.connect(resultURL);
		// socket = io.connect('http://challenge-friends.herokuapp.com');
		<% if (currentUser) { %>

			socket.on('globalevent', function (data) {

				console.log(data);
				pushStream(data);
			});
			<% } %>
			var pushStream = function(data) {
				var target = $('#streams')
				, template = '<li class="mepUp animated bounceInRight"><h5><i class="'+(data.icon ? data.icon : 'fa fa-circle-o') + '"></i> <span>'+data.message+'</span></h5><p class="text-right"><small>'+(data.desc?data.desc:'')+'</small></p> <span class="dateFrom"><span class="timeFromUp" data-date="'+data.date+'">1 second</span> ago</span></li>';

				target.prepend(template);

			}

			var isMobile = ($(window).width() < 800) ? true : false;
		//Avatars/identicons
		// $('.identicon').each( function(){
		// 	var _this = $(this);
		// 	var data = _this.attr('data-hashMe')
		// 	, size = _this.attr('data-size') ? _this.attr('data-size') : 100;

		// 	var hash = CryptoJS.MD5(data);
		// 	_this.text(hash);
		// 	_this.identicon5({
		// 		rotate: true,
		// 		size: size
		// 	});
		// })
		// nprogress Is disabled for now, could be using it in the future though.
		var myLevel = Math.round((<%= currentUser.xp/ (currentUser.xp + currentUser.xpNext) %>)*100)/100;
		var flatten = Math.round((myLevel * .8)*100);
		$('#user-xpbar').width(flatten + '%')
		
		// NProgress.configure({ ease: 'ease-in-out', speed: 2239, showSpinner: false  });
		// NProgress.set( myLevel );

		// NOTIFICATIONS =========================
		alertify.set({ delay : 12000 });
		var queue = [];
		var hasCSuccess = [];

		<% if (currentUser) {

			if(currentUser.notifications && currentUser.notifications.length > 0) { 

				var notif = currentUser.notifications
				, limit = 9;

				for (var i = notif.length - 1; i >= 0; i--) {
					if(notif[i].isSeen == false) { 
						--limit;

						if(notif[i].type == 'challengeSuccess'){ %>
							var obj_<%= i %> = {
								title : '<%= notif[i].to %>',
								link : '<%= notif[i].link2 %>',
								message : '<%= notif[i].title %>'
							}
							hasCSuccess.push(obj_<%= i %>);
							<%
						} %>

						queue.push(['<i class="<%= notif[i].icon %>"></i> <a href="<%= notif[i].link1 %>" title="<%= notif[i].title %>"><strong><%= notif[i].title %></strong></a> <a href="<%= notif[i].link2 %>" ><%= notif[i].to %></a> <%= notif[i].message %>','<%= notif[i]._id %>', <%= notif[i].persist ? false : true %>, true]);
						// <%= (notif[i].persist && currentUser.allowDeskNotif) ? true : false %>
						console.log(<%= i %> + ' ' + <%= limit %> + ' max ' + <%= notif.length %>+ ' queue ' + queue.length);
						<% 
						/*if(limit <= 0 || i == notif.length-1){
							%>
							console.log('fired')
							notif(queue, queue.length -1); 
							challengeAlert(); 
							<%
							break;
						}*/
					} 
				}
			}
		} %>

		notif(queue, queue.length -1); 
		challengeAlert(); 
		readability();
		readabilityAgo();

		setTimeout(function(){
			$('.odometer').each(function(){
				var number = Math.floor(parseInt($(this).attr('data-number')));

				$(this).html(number);
			});
		}, 1000);

		$('.loaderProgress').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){
			animateProgress();
		});

			// Progress animation
			function animateProgress() {

				var progressNumber = $('.tinyProgress').length;
				//All progress are now at their expected value, cast ou the setInterval
				if(progressNumber <= 0 ){					
					console.log(progressNumber)
					clearInterval(timerId);
				} else {

					$('.tinyProgress').each(function(){

						var _this   = $(this)
						, currWidth = _this.width()/10
						, tarWidth  = _this.attr('data-percent');

						var currWidth = (currWidth === 0) ? 0.05 : currWidth;
						var incVal 	= (currWidth + (tarWidth * Math.random()));	

						if(incVal >= tarWidth) 
							_this.width(tarWidth + '%');
						else{
							_this.width(incVal + '%');
							setTimeout(animateProgress, 333);
						}
					});	
				}
			}	
			function notif (queue,i) {     

				setTimeout(function () {  
					if(queue[i]) {
						sendNotif(queue[i][0],queue[i][1],queue[i][2])
						if(queue[i][3]) notify(false, queue[i][0]);
						if (--i) notif(queue, i);  

					}    			
				}, 220)
			}
			// If the user accepted having desktop notifs
			function notify(title, content, image, link) {
				console.log('notify push')
				var title = title || 'Challenge Your Friends Notification';
				var content = content || 'Notification popped';
				var image = image || resultURL+'/logo_dark.png';
				var link = link || resultURL;

				var havePermission = window.webkitNotifications.checkPermission();
				if (havePermission == 0) {
    				// 0 is PERMISSION_ALLOWED 
    				console.log('PERMISSION_ALLOWED')
    				var notification = window.webkitNotifications.createNotification(
    					image,
    					title,
    					content
    					);

    				notification.onclick = function () {
    					notification.close();
    				}
    				notification.show();
    			} else {
    				console.log('PERMISSION_ NOT ALLOWED')
    				window.webkitNotifications.requestPermission();
    			}
    		}  
    		$('#dismissBoxChall').click(function(e){
    			e.preventDefault();
    			$('#gotchaChallenge,#gotaBoxContent')
    			.removeClass('flipInX')
    			.addClass('flipOutX');

    			$('#gotchaChallenge').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){

    				$('#gotchaChallenge,#gotaBoxContent')
    				.remove();
    			});
    		})
    		function challengeAlert (){
    			var number = hasCSuccess.length;

    			if(number == 1 ){

    				var template = '<canvas id="gotchaChallenge" class="hidden" width="100%" height="100%" style="overflow:hidden;margin:0;background: rgb(38,38,38); position:absolute; top:0; left:0;bottom:0;right:0; z-index:9999999;height: 110%; width:110%"></canvas><div id="gotaBoxContent" class="animated" style="margin: 0; position: relative;z-index:99999991;height: 100%; width:100%;display: block;top: 50%;padding: 50px 0;"><div style="width: 50%; height: 50%; overflow: auto; margin: auto; position: relative;"><h1 style="color: white">Congratulation!</h1><p><hr><h3 style="color: rgb(255, 248, 81)">'+hasCSuccess[0].message+'</h3></p><hr><p><a href="#" id="dismissBoxChall" title="dissmiss this!">Dissmiss</a></p></div></div>';
    				$(".canvas").prepend(template);
    				popChallengeSuccessbox();

    				$('#gotchaChallenge').removeClass('hidden').addClass('animated flipInX');


    			}
    		}
			// Launch some fun timers
			timeFromUp();
			setInterval(function(){
				timeFromUp();
			},60000);
		});
var sendNotif= function(msg, idNotif, del) {

	alertify.log(msg, 'info');

	var target = {					
		del : del,
		id : idNotif
	}
	$.ajax({
		type: 'POST',
		data: JSON.stringify(target),
		contentType: 'application/json',
		url: './markNotifRead',						
		success: function(data) {
			console.log(data);
		}
	});				
}
var timeFromUp = function(){
	$('.timeFromUp').each( function () {
		var start = $(this).attr('data-date');
		var converted = moment(start).countdown().toString();
		$(this).text(converted);
	})
}
</script>
