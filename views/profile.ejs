<!doctype html>
<html>
<head>
	<% include statics/headers %>
    <!-- Start General metas -->
    <meta name="url" content="http://www.challenge-friends.herokuapp.com">
    <meta name="language" content="EN">
    <meta name="reply-to" content="cyf.app@gmail.com">
    <meta name="rating" content="General">
    <meta name="keywords" content="profile, challenge, challenge friends, cyf, gaming, competition, e-sport, league of legend, dota, dota 2, champion">
    <meta name="title" content="<%= currentUser.local.pseudo %>'s profile - Challenge your Friends">
    <meta name="description" content="<%= currentUser.local.pseudo %> is a challenger level <%= currentUser.level %> at Challenge your Friends. He/She has <%= currentUser.friends.length %> friend(s).<%= currentUser.twitter.username ? 'twitter @'+currentUser.twitter.username :'' %> ">
    <!-- End General metas -->
    <!-- Start Open Graph metas -->
    <meta property="og:type" content="profile:<%= currentUser.local.idCool %>"> <!-- website/article/profile -->
    <meta property="og:url" content="http://www.challenge-friends.herokuapp.com/u/<%= currentUser.idCool %>">
    <meta property="og:site_name" content="Challenge your Friends"/>
    <meta property="og:image" content="<%= currentUser.icon %>.png">
    <meta property="og:image:width" content="200">
    <meta property="og:title" content="<%= currentUser.local.pseudo %>'s profile - Challenge your Friends">
    <meta property="og:description" content="<%= currentUser.local.pseudo %> is a challenger level <%= currentUser.level %> at Challenge your Friends. He/She has <%= currentUser.friends.length %> friend(s) <%= currentUser.twitter.username ? 'find him on twitter @'+currentUser.twitter.username :'' %>  ">
    <!-- End Open Graph -->
    <!-- Start Twitter Card Meta -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@cyf_app">
    <meta name="twitter:image" content="<%= currentUser.icon %>.png">
    <meta name="twitter:image:width" content="200">
    <meta name="twitter:title" content="<%= currentUser.local.pseudo %>'s profile - Challenge your Friends">
    <meta name="twitter:description" content="<%= currentUser.local.pseudo %> is a challenger level <%= currentUser.level %> at Challenge your Friends. He/She has <%= currentUser.friends.length %> friend(s) <%= currentUser.twitter.username ? 'find him on twitter @'+currentUser.twitter.username :'' %>  ">
    <!-- Twitter card end -->
	<title>This is your profile, <%= currentUser.local.pseudo %> - Challenge your Friends</title>
	<link rel="stylesheet" href="./css/timeline.css">

</head>
<body>

	<% include statics/navTop %>
	<% xpPer = Math.round((currentUser.xp/ ( currentUser.xp + currentUser.xpNext) )*100); %>

	<div class="canvas c-center-x">
		
		<div class="container">
			<div class="row">
				<div id="user_header" class="col-lg-8">
						<div class="row">
							<div class="col-lg-2 col-xs-2 animated fadeInDown" href="#">
									<img src="<%= currentUser.icon %>" class="img-responsive img-rounded">
							</div>
							<h2 class="col-lg-10 animated fadeInDown">
								<%= currentUser.local.pseudo %> 

								<span id="scorebox">
									<span class="level text-center">
										<span class="odometer" data-number="<%= currentUser.level %>">
											0
										</span>
									</span>
								</span>
								<small> <a href="/u/<%= currentUser.idCool %>"> <i class="fa fa-chain"></i> <%= currentUser.idCool %> </a></small>
							</h2>
							<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
										<div class="loaderProgress animated fadeInDown">
											<div class="tinyProgress tinyBlue" style="width: 0%" data-percent="<%= xpPer %>"></div>

											<div class="xp text-center">
												<%= currentUser.xp %>/<%= (currentUser.xp + currentUser.xpNext) %>
											</div>
										</div>
							</div>
							<div class="col-lg-12">	
								<strong>Linked accounts: </strong>
								<% if (currentUser.local.pseudo) { %>
								<span class="label label-default">CyF</span>
								<% } %>
								<% if (currentUser.facebook.token) { %>
								<span class="label label-primary">Facebook</span>
								<% } %>
								<% if (currentUser.google.token) { %>
								<span class="label label-danger">Google</span>
								<% } %>
								<% if (currentUser.leagueoflegend.idProfile) { %>
								<span class="label label-info">League of Legend</span>
								<% } %>
								<% if (currentUser.twitter.token) { %>
								<a href="https://www.twitter.com/<%= currentUser.twitter.username %>" title="see <%= currentUser.twitter.username %> on twitter" target="_blank" class="label label-info">Twitter</a>
								<% } %>
								<a href="./settings" title="add an account" class="label label-default">
									<span class="fa fa-plus"></span>
									Add
								</a>
							</div>
							<div class="col-lg-12">
								<h3>Ladders ranking</h3>	
								<table class="table table-striped text-center">
									<thead>
										<tr>
											<th class="text-center">Yesterday's</th>
											<th class="text-center">Last Week</th>
											<th class="text-center">Last Month</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td><%= currentUser.dailyRank === 0 ? 'not ranked' : currentUser.dailyRank %></td>
											<td><%= currentUser.weeklyRank === 0 ? 'not ranked' : currentUser.weeklyRank %></td>
											<td><%= currentUser.monthlyRank === 0 ? 'not ranked' : currentUser.monthlyRank %></td>
										</tr>
									</tbody>
								</table>
							</div>

							<div class="col-md-12 col-lg-12 col-xs-1O col-sm-1O">
								<div class="panel">
									<div class="tabbable tabs-left clearfix">
										<ul id="tabbyTab" class="nav nav-tabs nav-justified">
											<li class="active"><a href="#xpTab" data-toggle="tab">XP Progression</a></li>
											<li><a href="#levelTab" data-toggle="tab">Level Progression</a></li>
											<li><a href="#ranksTab" data-toggle="tab">Ranks Historic</a></li>
										</ul>
										<div id="tabby" class="tab-content">
											<div class="tab-pane active" id="xpTab">
												<canvas id="historygraph"></canvas>
											</div>
											<div class="tab-pane" id="levelTab">
												<canvas id="levelgraph"></canvas>
											</div>
											<div class="tab-pane" id="ranksTab">
												<canvas id="ranksgraph"></canvas>
											<div class="text-left">
												
											Yesterday's <i class="fa fa-square grapefruit-color "></i>
											Last Week <i class="fa fa-square sunflower-color"></i>
											Last Month <i class="fa fa-square aqua-color"></i>
											</div>
											</div>
											<div class="text-right">
												<small class="timer"></small>
											</div>	
										</div
									</div>
								</div>
							</div>
						</div>
						</div>
				</div>
				<div class="col-lg-4 badggies">
					<h4>My Badges</h4>
					<section class="badgeList">
						
						<img src="./img/badges/daily_ranked_1.png" class="img-responsive hover-me x2" data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
						<img src="./img/badges/daily_ranked_2.png" class="img-responsive hover-me x2 " data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
						<img src="./img/badges/daily_ranked_3.png" class="img-responsive hover-me x2 " data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
						<img src="./img/badges/friends_10.png" class="img-responsive hover-me x2 " data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
						<img src="./img/badges/friends_20.png" class="img-responsive hover-me x2" data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
						<img src="./img/badges/friends_30.png" class="img-responsive hover-me x2" data-toggle="tooltip" data-placement="bottom" title="Tooltip on left">
					</section>
				</div>
			</div>
			<div class="row">
				<ul class="timeline col-lg-12">
					<% var notif = currentUser.notifications;
					for (var i = notif.length - 1; i >= 0; i--) {
						if(notif[i].persist === true) { 
							var isOdd =  (i % 2) ? '' : 'timeline-inverted'
							, type = (notif[i].type == 'challengeSuccess') ? 'success' : ((notif[i].type == 'challengeReceive') ? 'danger' : 'info');
							%>
							<li class="<%= isOdd %> ">
								<div class="timeline-badge <%= type %>"><span class="<%= notif[i].icon %>"></span></div>
								<div class="timeline-panel glow-shad ">
									<div class="timeline-heading">
										<h4 class="timeline-title"><%= notif[i].title %></h4>
										<p>
											<small class="text-muted">
												<i class="glyphicon glyphicon-time"></i>
												<span class="timeAgo" data-date="<%= notif[i].date %>"></span>
											</small>
										</p>
									</div>
									<div class="timeline-body">
										<p> <a href="<%= notif[i].link2 %>" ><%= notif[i].to %></a> <%= notif[i].message %></p>
									</div>
								</div>
							</li>
							<% } 
					} %>
				</ul>			
			</div>
		</div>
	</div>
		
	<% include statics/footers %>
	<script type="text/javascript" src="../js/chart.min.js"></script>
	<script type="text/javascript">

		$(function() {

			$(".graphsTab input[type=checkbox]").bootstrapSwitch();
			// return an array composed of a list of the days' number from 1 month ago until today, not included.
			function getAllDays() {
				var e = moment();
				var s = moment().subtract('months', 1);
				var a = [];

				while(s.isBefore(e)) {
					a.push(s.format("MMM - DD"));
					s = s.add('days', 1);
				}
				return a;
			}

			$('.badggies img').hover(function(e){
				$(this).tooltip('show')
			},function(){
				$(this).tooltip('hide')

			})
			
			var meNot = false;
			$('.linked').hover(function(){
				var _this = $(this);
				_this.children('.meany').addClass('hidden');
				_this.children('a').removeClass('hidden');

			}, function(){
				var _this = $(this);
				_this.children('a').addClass('hidden');
				_this.children('.meany').removeClass('hidden');
			});
			//pop it
			timer();
			setInterval(function(){
				timer();
			},60000);
			//================================================
			// User Xp Historic graph
			var dataLabels = getAllDays();
			var desiredRatio = $("#historygraph").parent().width();
			var canvasXp = $("#historygraph")[0];

			var ctxXp = canvasXp.getContext("2d");
			var dota2 = []
			, warcraft4 = []
			, dailyR = []
			, weeklyR = []
			, monthlyR = [];

			canvasXp.setAttribute('width', desiredRatio);
			canvasXp.setAttribute('height', desiredRatio/2.5);

			var historic = JSON.parse('<%-JSON.stringify(currentUser.xpHistoric)%>').reverse();
			var rHistDaily = JSON.parse('<%-JSON.stringify(currentUser.dailyArchives)%>').reverse()
			var rHistWeekly = JSON.parse('<%-JSON.stringify(currentUser.weeklyArchives)%>').reverse();
			var rHistMonthly = JSON.parse('<%-JSON.stringify(currentUser.monthlyArchives)%>').reverse();

			<% if(currentUser.dailyRank > 0) {%>

				rHistDaily.push({'rank': <%=currentUser.dailyRank %>});
			<%} %>
			<% if(currentUser.weeklyRank > 0) {%>
				rHistWeekly.push({'rank': <%=currentUser.weeklyRank %>});
			<%} %>
			<% if(currentUser.monthlyRank > 0) {%>
				rHistMonthly.push({'rank': <%=currentUser.monthlyRank %>});
			<%} %>

			var offsetDaily = rHistDaily[0] && rHistDaily[0].length>0 ? rHistDaily[0].rank: 10000;
			var offsetWeekly = rHistWeekly[0] && rHistWeekly[0].length>0 ? rHistWeekly[0].rank: 10000;
			var offsetMonthly = rHistMonthly[0] && rHistMonthly[0].length>0 ? rHistMonthly[0].rank: 10000;

			// position our start at the end of the graph by reversing it.
			for (var i = 0; i < dataLabels.length; i++) {
				// Reverse the value of our historic
				thisOne = historic[i] ? historic[i].xp : 0;
				thatOne = historic[i] ? historic[i].level : 0;
				thisdaily = rHistDaily[i] ? (rHistDaily[i].rank == 0 ? false:rHistDaily[i].rank) : false;
				thisWeekly = rHistWeekly[i] ? (rHistWeekly[i].rank == 0 ? false:rHistWeekly[i].rank) : false;
				thisMonthly = rHistMonthly[i] ? (rHistMonthly[i].rank == 0 ? false:rHistMonthly[i].rank) : false;

				if(thisOne > 0){
					dota2.push(thisOne);
				}
				if(thatOne > 0){		
					warcraft4.push(thatOne);
				}
				if(thisdaily){	
					dailyR.push(thisdaily);
				}
				if(thisWeekly){	
					weeklyR.push(thisWeekly);
				}
				if(thisMonthly){	
					monthlyR.push(thisMonthly);
				}
			};

			function testArray (aA,aB) {
				return aA.length > aB.length;
			}
			function offsetArray (arr,over9thousands) {
				var val = over9thousands? 9999:0;
				return arr.length === 1? [val,arr[0]]: (arr.length === 0 ? [val,val]: arr);
			}
			function findFirstRank (arr) {
				var rank=0;
				for (var i = arr.length - 1; i >= 0; i--) {
					if(arr[i] > 0)
						++rank;
				};
				return rank;
			}
			// We need at LEAST 2 values (it's a graph, yep)
			console.log(dailyR);
			console.log(weeklyR);
			console.log(monthlyR);
			dota2 = offsetArray(dota2);
			warcraft4 = offsetArray(warcraft4);
			// dailyR = offsetArray(dailyR);
			// weeklyR = offsetArray(weeklyR);
			// monthlyR = offsetArray(monthlyR);
			console.log(dailyR);
			console.log(weeklyR);
			console.log(monthlyR);


			var rd = findFirstRank(rHistDaily);
			var rw = findFirstRank(rHistWeekly);
			var rm = findFirstRank(rHistMonthly);
			var whichLongest = rd.length > rw.length ? (rd.length > rm.length ? rd : rm):(rw.length > rm.length ? rw : rm);
			whichLongest = offsetArray([whichLongest])
			var rankLab = whichLongest.length < dataLabels.length ? dataLabels.slice(dataLabels.length - whichLongest.length,dataLabels.length) : dataLabels;
			dailyR = whichLongest.length < dailyR.length ? dailyR.slice(dailyR.length - whichLongest.length,dailyR.length) : dailyR;
			weeklyR = whichLongest.length < weeklyR.length ? weeklyR.slice(weeklyR.length - whichLongest.length,weeklyR.length) : weeklyR;
			monthlyR = whichLongest.length < monthlyR.length ? monthlyR.slice(monthlyR.length - whichLongest.length,monthlyR.length) : monthlyR;
			rankLab = offsetArray(rankLab);
			console.log(rankLab);

			//BUILD CHARTS

			var xpLab = dota2.length < dataLabels.length ? dataLabels.slice(dataLabels.length - dota2.length,dataLabels.length) : dataLabels;
			var dataXp = {
				labels : xpLab,
				datasets : [
					{
						fillColor : "rgba(16,100,83,0.2)",
						strokeColor : "rgba(16,100,83,0.6)",
						pointColor : "rgba(16,100,83,0.8)",
						pointStrokeColor : "#fff",
						data : dota2
					}
				]
			}
			new Chart(ctxXp).Line(dataXp);
			//Level Graph

			var canvasLevel = $("#levelgraph")[0];
			var ctxLevel = canvasLevel.getContext("2d");
			canvasLevel.setAttribute('width', desiredRatio);
			canvasLevel.setAttribute('height', desiredRatio/2.5);


			var lvlLab = warcraft4.length < dataLabels.length ? dataLabels.slice(dataLabels.length - warcraft4.length,dataLabels.length) : dataLabels;
			var dataLevel = {
				labels : lvlLab,
				datasets : [
					{
						fillColor : "rgba(159,238,0,0.3)",
						strokeColor : "rgba(159,238,0,0.6)",
						pointColor : "rgba(159,238,0,0.8)",
						pointStrokeColor : "#fff",
						data : warcraft4
					}
				]
			}
			new Chart(ctxLevel).Line(dataLevel);

			//Ranks Graph
			var canvasRanks = $("#ranksgraph")[0];
			var ctxRanks = canvasRanks.getContext("2d");
			canvasRanks.setAttribute('width', desiredRatio);
			canvasRanks.setAttribute('height', desiredRatio/2.5);
			var opt = {
				datasetFill : false
			}
			var dataRanks = {
				labels : rankLab,
				datasets : [
					{
						fillColor : "rgba(237,85,101,0.3)",
						strokeColor : "rgba(237,85,101,0.6)",
						pointColor : "rgba(237,85,101,0.8)",
						pointStrokeColor : "#fff",
						data : dailyR
					},
					{
						fillColor : "rgba(255,206,84,0.3)",
						strokeColor : "rgba(255,206,84,0.6)",
						pointColor : "rgba(255,206,84,0.8)",
						pointStrokeColor : "#fff",
						data : weeklyR
					},
					{
						fillColor : "rgba(79,193,233,0.3)",
						strokeColor : "rgba(79,193,233,0.6)",
						pointColor : "rgba(79,193,233,0.8)",
						pointStrokeColor : "#fff",
						data : monthlyR
					}
				]
			}
			new Chart(ctxRanks).Line(dataRanks,opt);

		});
		var timer = function (){				
			// var d = new Date();
			// d.setHours(0,0,1,0)
			// var converted = moment(d).countdown().toString();
			$('.timer').text('Ranks are updated every 24h, xp and level every 12h.');
		}
	</script>
</body>
</html>