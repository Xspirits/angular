{
  "author": {
    "name": "Alejandro PerezpayÃ¡"
  },
  "name": "irelia",
  "description": "Node.js League of Legends API Wrapper",
  "keywords": [
    "wrapper",
    "League of Legends",
    "api",
    "riot",
    "irelia",
    "async",
    "lol",
    "node-lol",
    "league",
    "of",
    "legends"
  ],
  "version": "0.2.3",
  "repository": {
    "url": "https://github.com/alexperezpaya/irelia"
  },
  "main": "./lib/main.js",
  "dependencies": {
    "request": "*",
    "colors": "*",
    "async": "*"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "node test.js"
  },
  "readme": "Irelia\n======\n\n![Travis Status](https://api.travis-ci.org/alexperezpaya/irelia.png)\n\nIrelia is a Node.js Wrapper that will allow you to start coding easily with the [League of Legends Oficial API](http://developer.riotgames.com).\n\nGet your API Key at [http://developer.riotgames.com](http://developer.riotgames.com)\n\nThere are API limits right now, so use the API with caching with Redis, Memcache, etc.\n\n### Installation\n\n```\nnpm install irelia\n```\n\n### Usage\n\n```javascript\nvar Irelia = require('irelia');\nvar irelia = new Irelia({\n\tsecure: true,\n\thost: 'prod.api.pvp.net',\n\tpath: '/api/lol/'\n\tkey: 'your_key_goes_here',\n\tdebug: true\n});\nirelia.getSummonerByName('euw', 'NSZombie', function (err, res){\n\tconsole.log(err, res);\n});\n```\n\n### Errors\n\n```javascript\nvar Irelia = require('irelia');\nvar irelia = new Irelia({\n\tsecure: true,\n\thost: 'prod.api.pvp.net',\n\tpath: '/api/lol/'\n\tkey: 'your_key_goes_here',\n\tdebug: true\n});\nirelia.getSummonerByName('euw', 'NSZombie', function (err, summoner){\n\tif(err){\n\t\tif(err.status){\n\t\t\tif(err.status.code == 429){\n\t\t\t\tconsole.log(err.status.message);\n\t\t\t} else if(err.status.code == 404){\n\t\t\t\tconsole.log(err.status.message);\n\t\t\t} else if(err.status.code == 500){\n\t\t\t\tconsole.log(err.status.message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Unknown error code');\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(err); // Non http error\n\t\t}\n\t} else {\n\t\tconsole.log(summoner);\n\t}\n});\n```\n\n### Constants\n\n- lol.regions['euw'] -> ***'Europe West'***\n- lol.queues[2] -> ***'Normal 5v5 Blind Pick'***\n- lol.gametypes['CUSTOM_GAME'] -> ***'Custom game'***\n- lol.gamemode['CLASSIC'] -> ***'Summoner's Rift/Twisted Treeline game'***\n\n### Methods\n\nCallbacks - Response is given asyncronly using callbacks.\n```javascript\nirelia.getChampions('euw', true, function (err, champions){\n\tconsole.log(err, champions);\n});\n```\n\n- irelia.getChampions(region, freeToPlay[optional], callback);\n- irelia.getRecentGamesBySummonerId(region, summonerId, callback);\n- irelia.getLeagueBySummonerId(region, summonerId, callback);\n- irelia.getLeagueEntryBySummonerId(region, summonerId, callback);\n- irelia.getChallengerLeagueByGametype(region, type[***example***'RANKED_SOLO_5X5'])\n- irelia.getSummaryStatsBySummonerId(region, summonerId, season [optional], callback);\n- irelia.getRankedStatsBySummonerId(region, summonerId, season [optional], callback);\n- irelia.getMasteriesBySummonerId(region, summonerId, callback);\n- irelia.getRunesBySummonerId(region, summonerId, callback);\n- irelia.getSummonerByName(region, name, callback);\n- irelia.getSummonerBySummonerId(region, summonerId, callback);\n- irelia.getSummonersBySummonerIds(region, summonerIds[Array list], callback);\n- irelia.getTeamsBySummonerId(region, summonerId, callback);\n\n### Stats\n\n- irelia.getRealms(region, callback);\n- irelia.getRunes(version, locale, callback);\n- irelia.getMasteries(version, locale, callback);\n- irelia.getItems(version, locale, callback);\n- irelia.getChampionsData(version, locale, callback);\n- irelia.getSummonerSpells(version, locale, callback);\n- irelia.getLanguage(version, locale, callback);\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/alexperezpaya/irelia/issues"
  },
  "homepage": "https://github.com/alexperezpaya/irelia",
  "_id": "irelia@0.2.3",
  "_from": "irelia@^0.2.3"
}
